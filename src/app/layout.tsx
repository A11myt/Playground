import Menu from "@/components/atomics/radialMenu";
import "../tailwind.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


interface IIconContainer {
  label: string;
  description: string;
  icons: IIcon[];
}

interface IIcon {
  img: string;
  color?: string;
  label: string;
}


export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html>
      <body>
        <StreamBayLayout>
          {children}
        </StreamBayLayout>
      </body>
    </html>
  );
}

export function StreamBayLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <div className="w-full flex flex-row bg-light-50">
      <Sidebar logo="ASDF" />
      <div className="w-4/5">
        {children}
      </div>
    </div>
  );
}

function Sidebar({ logo }: { logo: string }) {
  return (
    <div className=" left w-1/5 z-50 h-screen bg-slate-500 ">
      <div className="flex mx-auto px-4">
        <div className="text-primary-100 font-ThedusStencil font-black text-4xl my-3"> {logo} </div>
      </div>
      <div className="w-full flex justify-center">
        <IconContainer
          label="ASDF ICONS"
          description="A place to test"
          icons={[
            { img: 'path/to/image1.png', label: 'Icon 1' },
            { img: 'path/to/image2.png', label: 'Icon 2' },
            { img: 'path/to/image3.png', label: 'Icon 3' },
            { img: 'path/to/image4.png', label: 'Icon 4' },
          ]}
        />
      </div>
    </div>
  );
}

function IconContainer({ label, description, icons }: IIconContainer) {
  return (
    <div className="w-full flex flex-col px-4">
      <span className="text-lg ">{label}</span>
      <span className="text-main-10">{description}</span>
      <div className="flex justify-center">
        <div className="grid grid-cols-2 mt-2 gap-8">

          {icons.map((icon, index) => (
            <IconButton key={index} img={icon.img} label={icon.label} />
          ))}
        </div>
      </div>
    </div>
  );
}

function IconButton({ img, color, label }: IIcon) {
  return (
    <div className={`w-28 h-28  rounded-md ${color == "" ? color : "bg-red-500"}`}>
      {img}
      <span className="text-lg text-">{label}</span>
    </div>
  );
}

